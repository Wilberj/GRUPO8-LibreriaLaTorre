@page
@model Libreria.Pages.Catalogos.CompraViewModel
@{
    Layout = "_Layout";
}

<main class="main">

    <section class="card_madre">

        <div class="Encabezado">
            <h1>
                Compras
            </h1>
        </div>
        <div class="contenedor_formulario">

            <div>
                <label> Identificador</label>
                <input class="Input_formulario" type="number" id="IdentComp" placeholder="ID">
            </div>
            <div>
                <label> Fecha de compra</label>
                <input class="Input_formulario" type="date" id="TxtFecha" placeholder="propiedad..">
            </div>
            <div>
                Proveedor:
                <select class="Input_formulario" id="TxtProv">
                </select>
            </div>
            <div>
                <label>SubTotal</label>
                <input class="Input_formulario" type="number" id="TxtSTotal" placeholder="propiedad..">
            </div>
            <div>
                <label> IVA</label>
                <input class="Input_formulario" type="number" id="TxtIVA" placeholder="propiedad..">
            </div>
            <div>
                <label> Descuento</label>
                <input class="Input_formulario" type="number" id="TxtDesc" placeholder="propiedad..">
            </div>
            <div>
                <label> Total</label>
                <input class="Input_formulario" type="number" id="TxtTotal" placeholder="propiedad..">
            </div>

            <div>
                Estado:
                <select class="Input_formulario" id="TxtEstado">
                    <option value="1">Activo</option>
                    <option value="0">Cancelada</option>

                </select>
            </div>

            <div>
                <input type="button" class="btn btn-primary" id="BtnSave" value="Guardar">
            </div>

            <div>
                <input class="BTN BTNCANCEL" type="button" id="" value="Cancelar">
            </div>


            <nav class="modal">
                <nav>
                </nav>

                <table id="TableData" class="ContenedorTable">
                    <thead>

                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </nav>
        </div>
       <div class="Encabezado">
           <h1> <a href="~/Catalogos/CompraDetView"> Detalle de compra</a></h1>
       </div>
    </section>
</main>



<script type="module">
    import CreateTable from "../js/TableComponent.js";
    import CreateDropDown from "../js/DropDownComponent.js";
    const LoadData = async () => {
        let url = "../api/Compra/GetCompra";
        let response = await fetch(url);
        response = await response.json();
        CreateTable(response[0], TableData, FunctionEdit);
        CreateDropDown(response[1], TxtProv, "nombre", "id_Proveedor");

    }

    const FunctionEdit = async (Item) => {
        console.log(Item);
        IdentComp.value = Item.id_Compra;
        TxtFecha.value = Item.fecha_Compra;
        TxtProv.value = Item.id_Proveedor;
        TxtSTotal.value = Item.sub_total;
        TxtIVA.value = Item.iva;
        TxtDesc.value = Item.descuento;
        TxtTotal.value = Item.total;
        TxtEstado.value = Item.estado;
    }

    window.onload = () => {
        BtnSave.onclick = async () => {
            let id;
            if (!IdentComp.value) { 
                id = -1;
            }
            else {
                id = IdentComp.value;
            }
            const ObjIns = {
                id_Compra: id,
                fecha_Compra: TxtFecha.value,
                id_Proveedor: parseInt(TxtProv.value),
                sub_total:Convert.ToDecimal(TxtSTotal.value),
                iva: TxtIVA.value,
                descuento: TxtDesc.value,
                total: TxtTotal.value,
                estado: parseInt(TxtEstado.value),
            }
            let flag = true;
            for (var prop in ObjIns) {
                if (prop != "id_Compra" && prop != "estado" && prop != "id_Proveedor") {
                    if (ObjIns[prop] == "") {
                        flag = false;
                        alert("la propiedad " + prop + " es requerida");
                        break;
                    }
                }
            }
            if (!flag) {
                return;
            }
            let url = "../api/Compra/SaveCompra";
            let response = await fetch(url, {
                method: 'POST',
                headers: {
                    'Content-type': 'application/json; charset-utf-8',
                    'Accept': '*/*'
                },
                body: JSON.stringify(ObjIns)
            });
            response = await response.json();
            if (response == true) {
                LoadData();
                document.getElementById("TxtProv").length = 0;

                IdentComp.value = "-1";
                TxtFecha.value = "";
                TxtProv.value = 1;
                TxtSTotal.value = "";
                TxtIVA.value = "";
                TxtDesc.value = "";
                TxtTotal.value = "";
                TxtEstado.value = 1;
 
            }
        }
        LoadData();
    }

    </script>
